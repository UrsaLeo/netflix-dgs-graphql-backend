type ClientTwinAccess {
    id: UUID!
    client: Client
    twin: Twin
    user: User!
    role: Role!
}


extend type Query {
    findAssinedUsersForTwin(twinId: UUID!):[ClientTwinAccess]
    findAssignedUserById(id: UUID!): ClientTwinAccess
}

extend type Mutation {
    assignUserToTwin(assignUserToTwinInput: AssignUserToTwinInput): ClientTwinAccess
    updateAccessLevelForUser(updateUserToTwinInput: UpdateUserToTwinInput): ClientTwinAccess
    unassignedUser(id: UUID!): MutationResponse
}

input AssignUserToTwinInput {
    id: UUID
    twinId: UUID
    userEmail: String!
    roleDescription: String!
}

input UpdateUserToTwinInput {
    id: UUID!
    roleDescription: String!
}